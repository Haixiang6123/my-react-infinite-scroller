{"version":3,"sources":["lib/InfiniteScroll.tsx","examples/utils.ts","examples/DivScroller.tsx","examples/WindowScroller.tsx","examples/DivReverseScroller.tsx","App.tsx","index.tsx"],"names":["InfiniteScroll","props","scrollComponent","loadingMore","pageLoaded","eventOptions","beforeScrollTop","beforeScrollHeight","scrollListener","bind","getEventListenerOptions","mousewheelListener","this","pageStart","attachListeners","isReverse","parentElement","getParentElement","scrollTop","scrollHeight","detachListeners","detachMousewheelListener","passive","testOptions","testListener","document","addEventListener","removeEventListener","e","options","useCapture","isPassiveSupported","el","offset","useWindow","doc","documentElement","body","window","pageYOffset","calculateOffset","clientHeight","threshold","offsetParent","loadMore","deltaY","preventDefault","calculateTopPosition","offsetHeight","innerHeight","offsetTop","scrollParent","getScrollParent","hasMore","scrollEl","initialLoad","children","element","loader","ref","childrenArray","unshift","push","passProps","node","createElement","Component","defaultProps","delay","asyncFn","Promise","resolve","setTimeout","then","counter","DivScroller","useState","items","setItems","fetchMore","a","newItems","i","Date","toISOString","useEffect","style","height","overflow","border","className","map","item","DivReverseScroller","slice","reverse","App","pane","setPane","onClick","WindowScroller","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fde61589.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport {Component, createElement, ReactNode} from 'react'\r\n\r\ninterface EventListenerOptions {\r\n  useCapture: boolean\r\n  passive: boolean\r\n}\r\n\r\ninterface Props {\r\n  loadMore: (pageLoaded: number) => void // 加载更多的回调\r\n  loader: ReactNode // 显示 Loading 的元素\r\n  initialLoad?: boolean // 是否第一次就加载\r\n  element?: string // 元素 tag 名\r\n  ref?: (node: HTMLElement | null) => void // 获取要滚动的元素\r\n  threshold?: number // offset 临界值，小于则开始加载\r\n  isReverse?: boolean // 是否为相反的无限滚动\r\n  hasMore?: boolean // 是否还有更多可以加载\r\n  pageStart?: number // 页面初始页\r\n  getScrollParent?: () => HTMLElement // 获取 parentElement 的回调\r\n  useWindow?: boolean // 是否以 window 作为 scrollEl\r\n  useCapture?: boolean // 是否注册为捕获事件\r\n}\r\n\r\nclass InfiniteScroll extends Component<Props, any> {\r\n  private scrollComponent: HTMLElement | null = null // 当前滚动的组件\r\n  private loadingMore = false // 是否正在加载更多\r\n  private pageLoaded = 0 // 当前加载页数\r\n  private eventOptions = {} // 注册事件的选项\r\n  // isReverse 后专用参数\r\n  private beforeScrollTop = 0 // 上次滚动时 parentNode 的 scrollTop\r\n  private beforeScrollHeight = 0 // 上次滚动时 parentNode 的 scrollHeight\r\n\r\n  // 默认 props\r\n  static defaultProps = {\r\n    initialLoad: true,\r\n    element: 'div',\r\n    threshold: 300,\r\n    isReverse: false,\r\n    hasMore: true,\r\n    pageStart: 0,\r\n    getScrollParent: null,\r\n    useWindow: true,\r\n    useCapture: false\r\n  }\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.scrollListener = this.scrollListener.bind(this)\r\n    this.getEventListenerOptions = this.getEventListenerOptions.bind(this)\r\n    this.mousewheelListener = this.mousewheelListener.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.pageLoaded = this.props.pageStart || 0\r\n    this.eventOptions = this.getEventListenerOptions()\r\n    this.attachListeners()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.isReverse && this.loadingMore) {\r\n      const parentElement = this.getParentElement(this.scrollComponent)\r\n\r\n      if (parentElement) {\r\n        parentElement.scrollTop = parentElement.scrollHeight - this.beforeScrollHeight + this.beforeScrollTop\r\n        this.loadingMore = false\r\n      }\r\n    }\r\n    this.attachListeners()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.detachListeners()\r\n    this.detachMousewheelListener()\r\n  }\r\n\r\n  isPassiveSupported() {\r\n    let passive = false\r\n\r\n    const testOptions = {\r\n      get passive() {\r\n        passive = true\r\n        return true\r\n      }\r\n    }\r\n\r\n    try {\r\n      const testListener = () => {\r\n      }\r\n      document.addEventListener('test', testListener, testOptions)\r\n      // @ts-ignore 仅用于测试是否可以使用 passive listener\r\n      document.removeEventListener('test', testListener, testOptions)\r\n    } catch (e) {\r\n    }\r\n\r\n    return passive\r\n  }\r\n\r\n  getEventListenerOptions() {\r\n    const options: EventListenerOptions = {useCapture: this.props.useCapture || false, passive: false}\r\n\r\n    if (this.isPassiveSupported()) {\r\n      options.passive = true\r\n    }\r\n\r\n    return options\r\n  }\r\n\r\n  scrollListener() {\r\n    const el = this.scrollComponent\r\n    if (!el) return\r\n\r\n    const parentElement = this.getParentElement(el)\r\n    if (!parentElement) return\r\n\r\n    let offset;\r\n\r\n    if (this.props.useWindow) {\r\n      const doc = document.documentElement || document.body.parentElement || document.body\r\n      const scrollTop = window.pageYOffset || doc.scrollTop\r\n\r\n      offset = this.props.isReverse ? scrollTop : this.calculateOffset(el, scrollTop)\r\n    } else {\r\n      offset = this.props.isReverse\r\n        ? parentElement.scrollTop\r\n        : el.scrollHeight - parentElement.scrollTop - parentElement.clientHeight\r\n    }\r\n\r\n    // 是否到达阈值，是否可见\r\n    if (offset < (this.props.threshold || 300) && (el && el.offsetParent !== null)) {\r\n      this.detachListeners()\r\n      this.beforeScrollHeight = parentElement.scrollHeight\r\n      this.beforeScrollTop = parentElement.scrollTop\r\n\r\n      if (this.props.loadMore) {\r\n        this.props.loadMore(this.pageLoaded += 1)\r\n        this.loadingMore = true\r\n      }\r\n    }\r\n  }\r\n\r\n  mousewheelListener(e: Event) {\r\n    // 详见: https://stackoverflow.com/questions/47524205/random-high-content-download-time-in-chrome/47684257#47684257\r\n    // @ts-ignore mousewheel 事件里存在 deltaY\r\n    if (e.deltaY === 1 && !this.isPassiveSupported()) {\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  calculateOffset(el: HTMLElement | null, scrollTop: number) {\r\n    if (!el) return 0\r\n\r\n    return this.calculateTopPosition(el) + (el.offsetHeight - scrollTop - window.innerHeight)\r\n  }\r\n\r\n  calculateTopPosition(el: HTMLElement | null): number {\r\n    if (!el) return 0\r\n\r\n    return el.offsetTop + this.calculateTopPosition(el.offsetParent as HTMLElement)\r\n  }\r\n\r\n  getParentElement(el: HTMLElement | null): HTMLElement | null {\r\n    const scrollParent = this.props.getScrollParent && this.props.getScrollParent()\r\n\r\n    if (scrollParent) {\r\n      return scrollParent\r\n    }\r\n\r\n    return el && el.parentElement\r\n  }\r\n\r\n  attachListeners() {\r\n    const parentElement = this.getParentElement(this.scrollComponent)\r\n\r\n    if (!parentElement || !this.props.hasMore) return\r\n\r\n    const scrollEl = this.props.useWindow ? window : parentElement\r\n\r\n    scrollEl.addEventListener('mousewheel', this.mousewheelListener, this.eventOptions)\r\n    scrollEl.addEventListener('scroll', this.scrollListener, this.eventOptions)\r\n    scrollEl.addEventListener('resize', this.scrollListener, this.eventOptions)\r\n\r\n    if (this.props.initialLoad) {\r\n      this.scrollListener()\r\n    }\r\n  }\r\n\r\n  detachMousewheelListener() {\r\n    const scrollEl = this.props.useWindow ? window : this.scrollComponent?.parentElement\r\n\r\n    if (!scrollEl) return\r\n\r\n    scrollEl.removeEventListener('mousewheel', this.mousewheelListener, this.eventOptions)\r\n  }\r\n\r\n  detachListeners() {\r\n    const scrollEl = this.props.useWindow ? window : this.getParentElement(this.scrollComponent)\r\n\r\n    if (!scrollEl) return\r\n\r\n    scrollEl.removeEventListener('scroll', this.scrollListener, this.eventOptions)\r\n    scrollEl.removeEventListener('resize', this.scrollListener, this.eventOptions)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // 内部 props\r\n      children, element, hasMore, isReverse, loader, loadMore, initialLoad,\r\n      pageStart, ref, threshold, useCapture, useWindow, getScrollParent,\r\n      // 需要 pass 的 props\r\n      ...props\r\n    } = this.props\r\n\r\n    const childrenArray = [children]\r\n\r\n    if (hasMore && loader) {\r\n      isReverse ? childrenArray.unshift(loader) : childrenArray.push(loader)\r\n    }\r\n\r\n    const passProps = {\r\n      ...props,\r\n      ref: (node: HTMLElement | null) => {\r\n        this.scrollComponent = node\r\n        if (ref) {\r\n          ref(node)\r\n        }\r\n      }\r\n    }\r\n\r\n    return createElement(element || 'div', passProps, childrenArray)\r\n  }\r\n}\r\n\r\nexport default InfiniteScroll\r\n","type AsyncFn = () => Promise<void>\r\n\r\nexport const delay = (asyncFn: AsyncFn) => new Promise<void>(resolve => {\r\n  setTimeout(() => {\r\n    asyncFn().then(() => resolve)\r\n  }, 1500)\r\n})\r\n","import React, {useEffect, useState} from 'react'\r\nimport InfiniteScroll from '../lib/InfiniteScroll'\r\nimport {delay} from './utils'\r\n\r\nlet counter = 0\r\n\r\nconst DivScroller = () => {\r\n  const [items, setItems] = useState<string[]>([]);\r\n\r\n  const fetchMore = async () => {\r\n    await delay(async () => {\r\n      const newItems = []\r\n\r\n      for (let i = counter; i < counter + 50; i++) {\r\n        newItems.push(`Counter: ${i} |||| ${new Date().toISOString()}`)\r\n      }\r\n      setItems([...items, ...newItems])\r\n\r\n      counter += 50\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMore().then()\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{height: 250, overflow: 'auto', border: '1px solid red'}}>\r\n      <InfiniteScroll\r\n        useWindow={false}\r\n        threshold={50}\r\n        loadMore={fetchMore}\r\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n      >\r\n        {items.map(item => <div key={item}>{item}</div>)}\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivScroller\r\n","import React, {useEffect, useState} from 'react'\r\nimport InfiniteScroll from '../lib/InfiniteScroll'\r\nimport {delay} from './utils'\r\n\r\nlet counter = 0\r\n\r\nconst DivScroller = () => {\r\n  const [items, setItems] = useState<string[]>([]);\r\n\r\n  const fetchMore = async () => {\r\n    await delay(async () => {\r\n      const newItems = []\r\n\r\n      for (let i = counter; i < counter + 150; i++) {\r\n        newItems.push(`Counter: ${i} |||| ${new Date().toISOString()}`)\r\n      }\r\n      setItems([...items, ...newItems])\r\n\r\n      counter += 150\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMore().then()\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{border: '1px solid blue'}}>\r\n      <InfiniteScroll\r\n        useWindow\r\n        threshold={300}\r\n        loadMore={fetchMore}\r\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n      >\r\n        {items.map(item => <div key={item}>{item}</div>)}\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivScroller\r\n","import React, {useEffect, useState} from 'react'\r\nimport InfiniteScroll from '../lib/InfiniteScroll'\r\nimport {delay} from './utils'\r\n\r\nlet counter = 0\r\n\r\nconst DivReverseScroller = () => {\r\n  const [items, setItems] = useState<string[]>([]);\r\n\r\n  const fetchMore = async () => {\r\n    await delay(async () => {\r\n      const newItems = []\r\n\r\n      for (let i = counter; i < counter + 50; i++) {\r\n        newItems.push(`Counter: ${i} |||| ${new Date().toISOString()}`)\r\n      }\r\n      setItems([...items, ...newItems])\r\n\r\n      counter += 50\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMore().then()\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{height: 250, overflow: 'auto', border: '1px solid red'}}>\r\n      <InfiniteScroll\r\n        isReverse\r\n        useWindow={false}\r\n        threshold={50}\r\n        loadMore={fetchMore}\r\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n      >\r\n        {items.slice().reverse().map(item => <div key={item}>{item}</div>)}\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivReverseScroller\r\n","import React, {useState} from 'react'\r\nimport DivScroller from './examples/DivScroller'\r\nimport WindowScroller from './examples/WindowScroller'\r\nimport DivReverseScroller from \"./examples/DivReverseScroller\";\r\n\r\ntype Pane = '1' | '2' | '3'\r\n\r\nconst App = () => {\r\n  const [pane, setPane] = useState<Pane>('1');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPane('1')}>Div 向下无限滚动</button>\r\n        <button onClick={() => setPane('2')}>Window 向下无限滚动</button>\r\n        <button onClick={() => setPane('3')}>Div 向上无限滚动</button>\r\n      </div>\r\n\r\n      <div>\r\n        {pane === '1' && <DivScroller/>}\r\n        {pane === '2' && <WindowScroller/>}\r\n        {pane === '3' && <DivReverseScroller/>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}